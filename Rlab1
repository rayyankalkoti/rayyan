library(dplyr)
student_data<-data.frame(
  Name=character(0),
  Math_Score=numeric(0),
  Science_Score=numeric(0),
  History_Score=numeric(0),
  Attendance=numeric(0)
)
print(student_data)

add_student<-function(name,math_score,science_score,history_score,attendence){
  
  new_student<-data.frame(
    Name=name,
    Math_Score=math_score,
    Science_Score=science_score
    History_Score=history_score,
    Attendence=attendence
  )
  
  student_data<<-bind_rows(student_data,new_student)
  
  cat("Student information added.\n")
}

calculate_average_scores<-function(){
  
  avg_scores<-student_data%>%
    mutate(Average_score=(Math_score+science_score+history_score)/3)%>%
    select(Name,Average_score)
  print(avg_scores)
  return(avg_scores)
}

identity_low_attendance<-function(threshold){
  low_attendence<-student_data%>%
    filter(attendence<threshold)%>%
    select(Name,Attendence)
  return(low_attendence)
}

generate_report<-function(){
  avg_scores<-calculate_average_scores()
  print(avg_scores)
  
  low_attendence<-identity_low_attendance(70)
  print(low_attendence)
  
  report<-merge(avg_scores,low_attendence,by="Name",all=TRUE)
  
  report$Attendence[is.na(report$Attendence)]<-100
  
  cat("Attendence Shortage:\n")
  print(low_attendence)
  
  cat("Performance report:\n")
  print(report)
}

while(TRUE){
  cat("\n 1.Add student\n2.Generate Report\n3.Exit\n")
  choice<-as.integer(readline("Enter your choice:"))
  
  if(choice==1){
    name<-readline("Enter student name:")
    math_score<-as.numeric(readline("Enter math score:"))
    science_score<-as.numeric(readline("Enter science score:"))
    history_score<-as.numeric(readline("Enter history score:"))
    attendence<-as.numeric(readline("Enter attendance percentage:"))
    add_student(name,math_score,science_score,history_score,attendence)
  }else if(choice==2){
    generate_report()
    
  }else if (choice==3){
    cat("Exiting the program. Goodbye!\n")
    break
    
  }else{
    cat("Invalid choice.Please try again.\n")
  }
}
